{
  "implementation/configure-IM-integration.html": {
    "href": "implementation/configure-IM-integration.html",
    "title": "Configure IM for integration",
    "keywords": "Configure IM for integration This section details the tasks you must complete to configure IM's specific features. Register Agile PLM This task is a prerequisite for the Manage Target System task, to connect Oracle PLM to IM. Manage Target System The Manage Target System page is where you configure connections between Fusion Innovation Management and Product Lifecycle Management (PLM) systems, supported on the Applications Unlimited framework. The Applications Unlimited framework uses webservices to create and retrieve data through the Fusion Innovation Management and PLM system connections. Use the Manage Connections page to define entities and their attributes that enable access between Fusion Innovation Management and PLM systems Use the Manage Mapping to External System page to map Fusion Innovation Management to PLM systems Use the Manage Mapping to Innovation Management page to map Fusion Innovation Management entities and attributes to multiple Applications Unlimited entities, depending on the mapping set used Manage Connections Page The Manage Connections page allows the administrator to: Configure multiple PLM system connections, and activate any one at a given time Duplicate the existing connector templates to create a new connection Edit configuration of a new connection by selecting it and clicking the Edit icon or using the Actions menu Define the engineering change order processing type to use when transferring items or item structures to PLM Note You cannot edit the attributes of a connector template. Manage Mapping to External System Page Use the Manage Mapping to External System page to: Define entities, subordinate entities, and their relationships to corresponding entities in the PLM system. Note The data you define here decides the data available for all future integration use cases. Define the individual attributes of entities. Decide the order of visibility of each attribute, and if it is searchable in the connected, external PLM system. Manage Mapping to Innovation Management Page Use the Manage Mapping to Innovation Management page to: Select a connection and a mapping set to view, add, and edit the associated entities. Note You cannot edit entities of a connector template. View, add, and edit attributes of the selected entity. Specify value transformations to convert data from the data formats of PLM systems into the data formats of Fusion Innovation Management, or conversely. Use the From and To Converter options for handling custom conversions between data types in Fusion Innovation Management and a PLM system."
  },
  "implementation/enable-saml-web-service.html": {
    "href": "implementation/enable-saml-web-service.html",
    "title": "Enable SAML-Protected Web Services on the Agile PLM Server",
    "keywords": "Enable SAML-Protected Web Services on the Agile PLM Server This topic details how to activate SCoreService.war and validate the activated web services. The following steps are applicable for an Agile PLM server running on a Windows operating system. Navigate to the Windows Services Console and stop the AgilePLM server instance. Navigate to the %AGILE_ROOT%\\agileDomain directory and make a backup copy of the file application.ear . Sample location: {agile-home}/agileDomain/applications/application.ear , where {agile-home} is the Agile PLM home directory. Open the file application.ear with 7-Zip or a similar utility, and browse to the following location: application.ear\\META-INF\\application.xml . Drag the file application.xml out of the file archiver utility to a Windows directory. To activate the web service set SCcoreService.war , open the file application.xml for editing. Within the file application.xml : a. Locate the module with ID WebModule_agilews , which refers to currently activated web services. b. Edit it as follows: <module id=\"WebModule_agilewsc\"> <web> <web-uri>SCoreService.war</web-uri> <context-root>/SCoreService</context-root> </web> </module> c. Save the file and close it. Drag the modified file application.xml back into the archive application.ear , replacing the original version in it. Navigate to application.ear\\SCoreService.war\\WEB-INF\\server-config.wsdd and extract it outside the archive to edit it. Within the file server-config.wsdd , modify all except the first instances of responseFlow with the updated handler details. Replace: <responseFlow> <handler type=\"java:com.agile.ws.security.AgileWSDoAllSender\"> <parameter name=\"signatureParts\" value=\"{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body;{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp\"/> <parameter name=\"signaturePropFile\" value=\"crypto.properties\"/> <parameter name=\"passwordCallbackClass\" value=\"com.agile.ws.security.WSSecurityACLCallback\"/> <parameter name=\"action\" value=\"Timestamp Signature Encrypt\"/> <parameter name=\"encryptionUser\" value=\"useReqSigCert\"/> </handler> </responseFlow> With: <responseFlow> <handler type=\"java:org.apache.ws.axis.security.WSDoAllSender\"> <parameter name=\"signatureParts\" value=\"{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body;{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}timestamp\"/> <parameter name=\"signaturePropFile\" value=\"crypto.properties\"/> <parameter name=\"passwordCallbackClass\" value=\"com.agile.ws.security.WSSecurityACLCallback\"/> <parameter name=\"action\" value=\"Timestamp Signature Encrypt\"/> <parameter name=\"encryptionUser\" value=\"useReqSigCert\"/> <parameter name=\"user\" value=\"serverkey\"/> <parameter name=\"encryptionKeyTransportAlgorithm\" value=\"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p\"/> <parameter name=\"signatureKeyIdentifier\" value=\"DirectReference\"/> <parameter name=\"encryptionKeyIdentifier\" value=\"DirectReference\"/> </handler> </responseFlow> Drag the modified file server-config.wsdd back to the archive applications.ear , replacing the original version in the archive. When you close application.ear , the system detects that file SCoreService.war was modified. Click OK when asked to update the archive. Restart the Agile PLM application server to ensure all the configuration changes take effect. Validate the web services: Open the Agile URL to the updated reference. Example: http://<plm_server>:<port>/SCoreService/services A list of web services on display confirms that they are working."
  },
  "implementation/getting-started.html": {
    "href": "implementation/getting-started.html",
    "title": "Quick start",
    "keywords": "Quick start IM is a solution set in the PM offering that provides closed-loop integration between strategic planning and innovation execution. This section lists the tasks required to implement IM objects including ideas, requirements specifications, feature sets, concepts, proposals, and portfolios. Task list This section lists all the required and optional tasks to implement IM. The optional tasks integrate IM with PLM systems, and complete the workflow of developing an idea into a production-ready prototype. Configure External Systems (optional) Configure Agile PLM Configure Agile EDM Configure IM for Integration (optional) Register Agile PLM Register Agile PLM Register Agile EDM File Server Manage Target Systems Implement IM Define Product Requirements and Ideation Management Manage Product Idea Classes Manage Product Idea Statuses Manage Product Requirements Classes Manage Product Requirements Statuses Manage Product Requirements and Ideation Lookups Define Concept Design Management Manage Product Concept Classes Manage Product Concept Component Classes Manage Product Concept Statuses Manage Product Concept Lookups Define Product Lifecycle Portfolio Management Manage Proposal Statuses Manage Product Portfolio Classes Manage Portfolio Statuses Manage Product Portfolio Planning Periods Manage Product Portfolio Metrics Manage Product Portfolio Lookups Manage Portfolio and Product Rule Sets Customize IM"
  },
  "implementation/implement-IM.html": {
    "href": "implementation/implement-IM.html",
    "title": "Implement IM",
    "keywords": "Implement IM Tasks that involve classes, statuses, and lookups share common rules, irrespective of the solution object they belong to. Class management in IM Define classes, class hierarchies, and class codes to establish reusable business objects in IM. Create a class Use classes and subordinate classes to define business object types. When you create a class, the class name that you provide is stored and used as an object type, at the time of business object creation. Select a class to edit the class name and description. The Object Creation Allowed Indicator in the Edit Class page controls the possibility of creating business objects of the current class value. Select the indicator to ensure that the class name is available to use as a type when creating a business object. Class code A Class Code is a constant and unique value associated with each class across IM and associated PLM systems. You may define a class code only once when creating a class, as it is used during integration with external systems, and is required to remain a consistent internal code. Note You cannot edit the class code after class creation. However, you can delete the existing class, if it was not already used to create an object, and create a new class with the required class code. Class hierarchy Class Hierarchy allows you to group and search for classes, based on class values or business objects types. Select a class in the Manage Class page to view the class hierarchy in the Edit Class page. Define lookups Use standard lookups in IM to define the following values in Requirements, Concept, and Portfolio modules during implementation: type status priority scope compliance resource pool metrics lifecycle phases rank Manage planning periods Product portfolio planning period is the time period during which the portfolio objects collect data for analysis. To define a planning period: Create planning period unit. Enter the start date, number of units and specify the duration (either monthly or quarterly). This action creates units with default labels that you cannot edit, except for unit names. Provide the start date planning period unit, end date planning period unit, and select the planning period unit from the choice list. IM creates columns in the Manage Resource Capacity table dynamically; the number of planning period units determines how they appear. The time line in the Schedule Gantt, Resource Gantt and Launch Gantt display is based on the number of planning period units."
  },
  "implementation/index.html": {
    "href": "implementation/index.html",
    "title": "Welcome to the Implementation Guide for Innovation Management",
    "keywords": "Welcome to the Implementation Guide for Innovation Management Innovation Management (IM) consists of the following three products available independently under the PM offering, along with PIM: Product Requirements and Ideation Management Concept Design Management Product Lifecycle Portfolio Management Audience This guide is intended for product implementors and administrators of IM with knowledge of both Agile PLM Java Client and Functional Setup Manager (FSM). About this guide This guide walks you through the tasks required to set up IM. It does not include instructions for PIM. For more information, see {link to PIM guide}. Prerequisites Use the Getting Started page in the Setup and Maintenance work area to access the following: a complete list of setup tasks descriptions of the options and features that you can select when you configure the offering lists of associated business objects and enterprise applications Complete the following Common Applications Configuration tasks for PM before implementing IM: Define Initial Users Define Users and Security Define Extensions for Product Management Define Transactional Business Intelligence Configuration For more information, see {link to common app implementation guide}. System requirements: Agile PLM 9.3.3 with Hotfix 4, Build 2 If you are integrating Oracle Innovation Management with Agile PLM (9.3.4 or above), you also require Weblogic Suite or Weblogic Suite for Oracle Applications."
  },
  "implementation/security-certificates-cloud.html": {
    "href": "implementation/security-certificates-cloud.html",
    "title": "Configure security certificates for cloud deployments",
    "keywords": "Configure security certificates for cloud deployments For the integration between Oracle Innovation Management and Agile PLM to work based on SAML tokens, you must configure a domain trust between the WebLogic domain, where Oracle Innovation Management is running, and the domain where Agile PLM is running. The objective is to exchange and import security certificates between the Agile PLM system and the Oracle Innovation Management system. The following process is an example based on a configuration where Agile PLM runs on MS Windows and Oracle Innovation Management runs on Oracle Linux. Follow the steps described in section {Basic SSL Configuration of the Agile Product Lifecycle Management Security Guide} to obtain and import a signed security certificate for your Agile PLM server. Export the public certificate of your Agile PLM Server from the keystore created in the previous step. a. In Agile PLM you can use the %AGILE_ROOT%\\agileDomain\\bin\\keystoreutil.cmd to manage the Certificates in the keystore. Adapt the keystore.properties file to point to the keystore created in step 1. b. Check if the passwords in %AGILE_ROOT%\\agileDomain\\config\\crypto.properties match the ones used in your keystore. c. To extract the server certificate run the following command: keystoreutil.cmd -export (For example, the resulting certificate file is servercert.cer .) Create a service request for the server administrator to request import of the security certificate of your Agile PLM Server: a. Attach the server encryption certificate exported in step 2 to the service request. b. Attach the root CA certificate and intermediate SSL CA certificate to the service request. c. Submit the service request. The administrator will add the server encryption certificate and the issuer certificate into the Oracle Fusion trust store. The administrator also creates an alias for the server encryption key, which will be used later, as described in section {Configure SAML Client Policy for Oracle Innovation Management}. Wait until your administrator informs you that the certificates have been imported and provides you with the alias used to import them, then close the service request. Create a service request for your administrator to request export of the public certificate used by your IM server for message encryption. Wait until the certificate file is provided to you, then close the service request. Import the certificate obtained in the previous step into your Agile PLM's trust store created in step 1. a. In Windows, modify the file keystore.properties in agileDomain\\bin to point to the obtained certificate file and provide an alias for this certificate. The settings resemble the following sample values: #Alias property keyalias=orakey #Name of the certificate certfilename=../config/imserverorakey.crt b. Save the file keystore.properties and close it. c. At the command prompt, run the following command: %AGILE_ROOT%\\agileDomain\\bin>keystoreutil.cmd -import d. Provide the keystore password when asked. e. When prompted, confirm that it is a trusted certificate."
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to my DocFX site",
    "keywords": "Welcome to my DocFX site Hi there! Thanks for stopping by. Here’s a quick summary of this website: Tools used: DocFX and Markdown Content source: Chapters from DITA-based implementation and user guides that I authored in a previous role. The original implementation guide had multiple contributors. I'm only adding chapters here (have a few more to go) that I authored and owned entirely, back in 2014. Happy to share PDFs of my original guides if you'd like to see them. For now, do check out the implementation guide and user guide in the site tabs. Yes, that’s my cat posing as the website logo. :-) Version 0.1 Copyright 2020 Audience Curious peers and hiring managers"
  },
  "user/analyze-concepts.html": {
    "href": "user/analyze-concepts.html",
    "title": "Analyzing concepts",
    "keywords": "Analyzing concepts Analyze a concept in terms of target costs, compliance, requirements fulfilled, or similar parameters to make informed decisions on the concept's lifecycle. Roll-up a concept To compare target and actual metrics of units in a concept structure, click the Roll-up button. This action calculates the variance in the actual and target metric attributes across all units of the concept structure, as applicable. In the Metrics view, a warning icon next to concept structure units indicates unfavorable variance values. A roll-up calculates the following metrics: Cost, weight, and power consumption Compliance Fulfilled requirements Status Concept score Cost, weight, and power consumption Compliance Fulfilled requirements Status Score Aggregates of the total values of linked items, concept components, and embedded concepts, up to the top-level concept. Total cost calculations: Total cost of an individual item or concept component = Material Cost + Non-Material Cost Total cost of a concept component assembly = Non-Material Cost + Aggregate of (Total cost of each item or component * Respective Quantities per Assembly) Total Weight of a concept component assembly = Aggregate of (Actual Weights of each linked item, concept component, and embedded concept * Respective Quantities) Total Power Consumption of a concept component assembly = Aggregate of (Actual Power Consumption of each linked item, concept component and embedded concept * Respective Quantities) The compliance status of a concept component or a linked item defines the compliance of the next higher-level component. The compliance statuses of items are read directly from PLM. They are mapped as either compliant or noncompliant items in CDM, depending on the completeness of information available. A noncompliant item or component renders its higher-level component noncompliant also. The number of assigned and fulfilled requirements per individual components in the concept structure, as applicable. This analysis aids in fine-tuning the accuracy of a proposed concept design in meeting user needs. The statuses of individual components and linked items in a concept assembly decide the aggregated status of the higher-level component, upto the top-level concept. You can link items from PLM in the concept structure if they are in either conceptual, preliminary, or production stage. Assessment of solution alternatives against design objectives. Concept-level scores calculation: the number of items in the structure, compared to concept components. Reuse of items scores extra points. the number of items with scores higher than the target value 85. A high percentage of high-scoring items in the structure raises the concept score. the number of items missing data such as compliance status, lead time, number of manufacturers, or preferred status. Complete items rank high. View metrics in a Spider Chart Use a spider chart to view and compare aggregated metrics across multiple solution alternatives, in an graphical or tabular form. Metrics are normalized - the chart calculates the relative deviation of each actual value from the target value, and displays positive or negative deviations from the target value. The Table view summarizes the data of the Spider Chart (calculated variance and metrics per solution alternatives) for quick reference."
  },
  "user/calculate-metrics.html": {
    "href": "user/calculate-metrics.html",
    "title": "Finding the optimum solution alternative",
    "keywords": "Finding the optimum solution alternative This section details a sample workflow to find the right solution alternative based on metrics and concept-level scores. Use-case Your team has been asked to modify the existing model of a mountain bike to meet certain requirements received as feedback from users. The mountain bike and its components exist in a PLM system as an item structure and items respectively. The primary requirements are: Reduce cost from $680 to $470 Increase power from 35hz to 40hz The detailed requirement specifications include: Reduce the size of the air box to improve efficiency and power Improve the exhaust system to increase the power Implement high flow rates and outstanding oil filtration for better power The following table summarizes key decisions to take in this scenario: Decisions to Consider In This Example How can the existing PLM items be used in the concept design? Convert existing items to concept components How are requirements and metrics correlated? Map requirements to components in the concept structure How can the concept structure accommodate multiple concept designs in parallel? Assign components to solution alternatives How do I ascertain the most suitable concept design? Modify component specifications Calculate metrics and compare solution alternatives Determine the concept design that fulfils requirements Prerequisites Complete the following actions before proceeding to the next task: Convert existing items to components in the concept Assign components to solution alternatives The structure and component specifications of the newly-created concept Mountain Bike in this example are tabulated here. The units Air Box, Exhaust System , and Oil Filter are PLM items that have been converted to components. Concept Component Default Solution Alternative 2 Solution Alternative 3 Cost Power ATV Air Box Yes 330 17 Air Box Yes Yes 200 10 Exhaust System Yes Yes Yes 190 15 Oil Filter Yes 80 10 Cartridge Oil Filter Yes 140 14 Wrench Off Oil Filter Yes 145 13 The following actions are optional but recommended: Enhance specifications of the converted components Air Box, Exhaust System, and Oil Filter. Reuse existing PLM items by converting them to concept components in the structure, and modifying specifications according to the requirements. The changes in component specifications can be translated into item enhancement requests in the PLM system. Map requirements to components in the concept structure. Step 1. Calculate metrics On the Edit Concept page, click the concept root node Mountain Bike and assign the following specifications to it: Target Cost 470 and Target Power 40 . Click the Metrics link above the concept structure region to roll up and view metrics. Click the Recalculate icon to view a roll up of assigned metrics. Step 2. Compare and select a Solution Alternative View and analyze the metric calculations of each concept. On the Edit Concept page in Metrics view, select the Solution Alternative menu and click Default . The calculated power exceeds the target power as indicated by the Warning icon. Repeat step 1 to view the calculated metrics for Solution Alternative 2 and Solution Alternative 3 also. The cost and power metrics of each solution alternative are tabulated below. Solution Alternative Default Solution Alternative 2 Solution Alternative 3 Cost 665 530 470 Power 45 39 35 Solution Alternative 2 offers an optimum solution to the primary requirements of Target Cost 470 and Target Power 40 , so you may choose to convert this alternative to a PLM item structure, or request approval for the concept Mountain Bike itself."
  },
  "user/concepts-explained.html": {
    "href": "user/concepts-explained.html",
    "title": "Understanding concepts",
    "keywords": "Understanding concepts Concepts bridge the gap between ideation and production. With CDM, you can: Generate, capture, analyze, and approve product concepts that address your company's strategic goals Transfer approved concepts directly to PLM solutions for prototype planning, detailed design, and prototyping The following use-cases highlight how you can use CDM to suit your role: Product architects : Use concepts to align toward strategy goals like optimal material and development costs, features, roadmap, partnership objectives, and future technology migration. Product managers : Compare and optimize competing concepts to support product strategy goals, and securely share the results with existing and potential supply chain partners or external design teams. Executives : Trace concepts in detail from ideas and requirements to finished products, for engineering clarifications, process analysis and improvement activities. Concept creation methods Create a concept using any of the following options: From ideas and formal requirements From existing concepts or concept templates (using Save-As) Create a copy of an original concept and its proposal for the following advantages: Reuse specific concept versions Select a different concept type from the original Retain or remove content details of the original concept, including structure, attachments and designs, requirements, references, and team Retain or remove content details of the original proposal, including cost, revenue, resources, attachments, references, and projects. You can copy concept-type specific attributes only if the source and target concept types match. As independent concepts Create an independent concept to own it entirely. This enables you to define concept structures that fulfil ideas and requirements specific to your prototypes and future designs. Concept attributes Concept Type : Preset values that define the grouping and search criteria of concepts. Choose among the preset values when you create a concept. You cannot modify this value in the concept later. To create unique concept types, contact your system administrator. Concept Status : Predefined states in a workflow that define the actions you can take at each stage. The following table details the different states: Status Workflow Stage Draft Design. This is the default status of a concept you create. As the concept owner, you can modify the concept structure as you require. Submitted Review. Submit a concept for review once you complete your concept design. You cannot make any further changes to the concept. Approved Approved. You can move an approved concept to a PLM system for production. The data of an approved concept continues to be available in CDM, as an item structure. Rejected Design. A concept that has been rejected in the Review stage reverts back to the Draft status. You can modify it if you are the concept owner. Concept versions Create and use versions of a concept to save and track the progress of your concept design. Points to remember: When you create a version of a concept, all the data of the source concept is copied into the newer version, and it is automatically numbered to the respective highest version number available. All previous versions are rendered read-only. You can edit only the latest version of a concept. To reuse and edit an older concept version, create a version from it, or create a copy of it using Save As. The following image shows how concept versions are numbered. Note Concepts and proposals can have versions independent of each other. What are requirements and proposals? Requirements, concepts, and proposals are elements of the IM product suite, and work together intrinsically. Requirements are design specifications that serve as inputs for concepts. Requirements also help measure the completeness of a concept. You can also build requirements specifications from concept designs, for use in future product redesigning activities. Concepts address the technical design aspect of a product. You cannot delete a concept which has a requirement assigned to it, without disassociating them first. Proposals contain the business information for concepts. When you create a concept, CDM creates a proposal of the same name; the converse applies as well. A concept and a proposal cannot contain sufficient information individually to justify a new project, and are hence created alongside each other. When you delete a proposal, the corresponding concept is also deleted. Note You cannot delete a concept-proposal pair if the concept is in Submitted or Approved state. Deletion is possible only if both, the proposal and concept, are in Draft or Rejected state. For more information on requirements and proposals, see {links to IM product guides}."
  },
  "user/overview.html": {
    "href": "user/overview.html",
    "title": "Welcome to the User Guide for CDM",
    "keywords": "Welcome to the User Guide for CDM Concept Design Management (CDM) is a collaborative design workspace in the IM suite. With concepts, you can convert product ideas into detailed prototypes that are ready for production. Audience This guide is intended for product architects, managers, and executives who are involved in product design and conceptualization. About this guide This document describes CDM in the IM suite. For information on requirements and proposals, see {links to IM product guides}. Prerequisites Contact your system administrator for your login credentials."
  }
}